/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.batch.protocol.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Properties used to create a user on an Azure Batch node.
 */
public class UserAccount {
    /**
     * The name of the user account.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The password for the user account.
     */
    @JsonProperty(value = "password", required = true)
    private String password;

    /**
     * The elevation level of the user account.
     * nonAdmin - The auto user is a standard user without elevated access.
     * admin - The auto user is a user with elevated access and operates with
     * full Administrator permissions. The default value is nonAdmin. Possible
     * values include: 'nonAdmin', 'admin'.
     */
    @JsonProperty(value = "elevationLevel")
    private ElevationLevel elevationLevel;

    /**
     * The SSH private key for the user account.
     * The SSH private key establishes password-less SSH between nodes in a
     * Linux pool when the pool's enableInterNodeCommunication property is
     * true. This property will be ignored in a Windows pool.
     */
    @JsonProperty(value = "sshPrivateKey")
    private String sshPrivateKey;

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the UserAccount object itself.
     */
    public UserAccount withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the password value.
     *
     * @return the password value
     */
    public String password() {
        return this.password;
    }

    /**
     * Set the password value.
     *
     * @param password the password value to set
     * @return the UserAccount object itself.
     */
    public UserAccount withPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get the elevationLevel value.
     *
     * @return the elevationLevel value
     */
    public ElevationLevel elevationLevel() {
        return this.elevationLevel;
    }

    /**
     * Set the elevationLevel value.
     *
     * @param elevationLevel the elevationLevel value to set
     * @return the UserAccount object itself.
     */
    public UserAccount withElevationLevel(ElevationLevel elevationLevel) {
        this.elevationLevel = elevationLevel;
        return this;
    }

    /**
     * Get the sshPrivateKey value.
     *
     * @return the sshPrivateKey value
     */
    public String sshPrivateKey() {
        return this.sshPrivateKey;
    }

    /**
     * Set the sshPrivateKey value.
     *
     * @param sshPrivateKey the sshPrivateKey value to set
     * @return the UserAccount object itself.
     */
    public UserAccount withSshPrivateKey(String sshPrivateKey) {
        this.sshPrivateKey = sshPrivateKey;
        return this;
    }

}
